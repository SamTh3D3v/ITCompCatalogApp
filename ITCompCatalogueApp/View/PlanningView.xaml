<Page
    x:Class="ITCompCatalogueApp.View.PlanningView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d ignore"
        DataContext="{Binding PlanningViewModel, Source={StaticResource Locator}}">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <i:Interaction.Triggers >
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding PlanningViewLoadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="4" Background="LightGray" Visibility="{Binding IsFilterVisible,Mode=TwoWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="Technology" Grid.Column="0" HorizontalAlignment="Left" Margin="5" Grid.Row="0" VerticalAlignment="Center"/>
            <Label Content="Category" Grid.Column="0" HorizontalAlignment="Left" Margin="5" Grid.Row="1" VerticalAlignment="Center"/>
            <Label Content="Cursus" Grid.Column="0" HorizontalAlignment="Left" Margin="5" Grid.Row="2" VerticalAlignment="Center"/>
            <ComboBox ItemsSource="{Binding ListTechnologies}" SelectedItem="{Binding SelectedTechnology,Mode=TwoWay}" TabIndex="0" IsReadOnly="True" Background="WhiteSmoke"  IsEditable="True"   Grid.Column="1" HorizontalAlignment="Stretch"  Margin="5" Grid.Row="0" VerticalAlignment="Stretch" />
            <ComboBox ItemsSource="{Binding ListCategories}" SelectedItem="{Binding SelectedCategory,Mode=TwoWay}" TabIndex="1" IsReadOnly="True" Background="WhiteSmoke"  IsEditable="True"   Grid.Column="1" HorizontalAlignment="Stretch"  Margin="5" Grid.Row="1" VerticalAlignment="Stretch" />
            <ComboBox ItemsSource="{Binding ListCursus}" SelectedItem="{Binding SelectedCursus,Mode=TwoWay}" TabIndex="2" IsReadOnly="True" Background="WhiteSmoke"  IsEditable="True"   Grid.Column="1" HorizontalAlignment="Stretch"  Margin="5" Grid.Row="2" VerticalAlignment="Stretch" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <ControlTemplate x:Key="SelectedItemTemplate">
                    <Image Source="../Assets/search.png"></Image>
                </ControlTemplate>
                <ControlTemplate x:Key="ItemsTemplate">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Margin="1" IsChecked="{Binding IsSelected,Mode=TwoWay}"/>
                        <TextBlock Text="{Binding Name}" Margin="1"/>
                    </StackPanel>
                </ControlTemplate>
                <DataTemplate x:Key="CbxSearchTemplate">
                    <Control x:Name="theControl" Focusable="False" Template="{StaticResource ItemsTemplate}" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=IsSelected}" Value="{x:Null}">
                            <Setter TargetName="theControl" Property="Template" Value="{StaticResource SelectedItemTemplate}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Grid.Resources>
            <ComboBox Grid.Column="0" SelectedItem="{Binding SearchItems[0],Mode=OneTime}" Margin="2" ItemsSource="{Binding SearchItems,Mode=TwoWay}" ItemTemplate="{StaticResource CbxSearchTemplate}"/>
            <TextBox Grid.Column="1"  VerticalAlignment="Stretch"  Text="{Binding SearchText,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch"  VerticalContentAlignment="Center" Margin="2"/>
        </Grid>
        <xctk:BusyIndicator Grid.Row="2" IsBusy="{Binding BusyIndicator}">
            <DataGrid x:Name="DataGrid"  IsReadOnly="True" Style="{StaticResource DataGridStyle}"  AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding ListCourses,Mode=TwoWay}" SelectedItem="{Binding SelectedCourse,Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <command:EventToCommand Command="{Binding Mode=OneWay,Path=ModifierCourseCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Code}" Header="Code" Width="SizeToHeader" MinWidth="100"/>
                    <DataGridTextColumn Binding="{Binding Intitule}" Header="Intitulé" Width="SizeToHeader" MinWidth="300"/>
                    <DataGridTextColumn Binding="{Binding Duree}" Header="Durée" Width="SizeToHeader" MinWidth="100"/>
                    <DataGridTextColumn Binding="{Binding Annee}" Header="Année" Width="SizeToHeader" MinWidth="100"/>
                    <DataGridTextColumn Binding="{Binding Category.Intitule}" Header="Catégorie " MinWidth="100" />
                    <DataGridTextColumn Binding="{Binding Category.Technology.Intitule}" Header="Téchnology " MinWidth="100" />
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid IsReadOnly="True" AutoGenerateColumns="False" EnableRowVirtualization="True" 
                                  ItemsSource="{Binding Path=SelectedItem.CourDates,ElementName=DataGrid}" CanUserAddRows="True">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid">                                    
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SelectedItem.CourDates.Count,ElementName=DataGrid}" Value="0">
                                            <Setter Property="Height" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.Columns>
                                <DataGridTextColumn  Binding="{Binding DateDebut}" Header="Date Debut" Width="SizeToHeader" MinWidth="200"/>
                                <DataGridTextColumn Binding="{Binding DateFin}" Header="Date Fin" Width="SizeToHeader" MinWidth="400"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Ajouter" Command="{Binding AjouterCourseCommand}"/>
                        <MenuItem Header="Modifier" Command="{Binding ModifierCourseCommand}" IsEnabled="{Binding SelectedCourse,Converter={StaticResource IsSelectedToEnableConverter}}"/>
                        <MenuItem Header="Supprimer" Command="{Binding SupprimerCourseCommand}" IsEnabled="{Binding SelectedCourse,Converter={StaticResource IsSelectedToEnableConverter}}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </xctk:BusyIndicator>
    </Grid>
</Page>
